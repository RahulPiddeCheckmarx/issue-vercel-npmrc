pipeline {

  agent any

  environment {
    ARTIFACTORY_URL = "${npm_config_registry}"
  }
  stages {
    stage('Git checkout Codebase') {
      steps {
        git credentialsId: 'jenkins-user-for-xyz-artifact-repository', url: 'https://github.com/RahulPiddeCheckmarx/issue-vercel-npmrc', branch: 'main'
      }
    }
stage('Install Dependencies') {
      steps {
        bat 'npm install'
      }
    }
stage('Checkmarx scan ') {
            steps {
            step([$class: 'CxScanBuilder', comment: 'argo-mountebank-sit', configAsCode: true, credentialsId: 'checkmarx credentails', customFields: '', dependencyScanConfig: [dependencyScanExcludeFolders: 'node_modules, target, test', dependencyScanPatterns: '', dependencyScannerType: 'OSA', enableScaResolver: 'MANIFEST', fsaVariables: '', osaArchiveIncludePatterns: '*.zip, *.war, *.ear, *.tgz', overrideGlobalConfig: true, pathToScaResolver: '', sastCredentialsId: '', scaAccessControlUrl: 'https://platform.checkmarx.net', scaConfigFile: '', scaCredentialsId: '', scaEnvVariables: '', scaResolverAddParameters: '', scaSASTProjectFullPath: '', scaSASTProjectID: '', scaSastServerUrl: '', scaServerUrl: 'https://api-sca.checkmarx.net', scaTeamPath: '', scaTenant: '', scaWebAppUrl: 'https://sca.checkmarx.net'], excludeFolders: 'node_modules, target, test', exclusionsSetting: 'job', failBuildOnNewResults: false, failBuildOnNewSeverity: 'HIGH', filterPattern: '''!**/*.tpl,    !**/_cvs/**/*, !**/.svn/**/*,   !**/.hg/**/*,   !**/.git/**/*,  !**/.bzr/**/*, !**/bin/**/*,
!**/obj/**/*,  !**/backup/**/*, !**/.idea/**/*, !**/*.DS_Store, !**/*.ipr,     !**/*.iws,
!**/*.bak,     !**/*.tmp,       !**/*.aac,      !**/*.aif,      !**/*.iff,     !**/*.m3u, !**/*.mid, !**/*.mp3,
!**/*.mpa,     !**/*.ra,        !**/*.wav,      !**/*.wma,      !**/*.3g2,     !**/*.3gp, !**/*.asf, !**/*.asx,
!**/*.avi,     !**/*.flv,       !**/*.mov,      !**/*.mp4,      !**/*.mpg,     !**/*.rm,  !**/*.swf, !**/*.vob,
!**/*.wmv,     !**/*.bmp,       !**/*.gif,      !**/*.jpg,      !**/*.png,     !**/*.psd, !**/*.tif, !**/*.swf,
!**/*.jar,     !**/*.zip,       !**/*.rar,      !**/*.exe,      !**/*.dll,     !**/*.pdb, !**/*.7z,  !**/*.gz,
!**/*.tar.gz,  !**/*.tar,       !**/*.gz,       !**/*.ahtm,     !**/*.ahtml,   !**/*.fhtml, !**/*.hdm,
!**/*.hdml,    !**/*.hsql,      !**/*.ht,       !**/*.hta,      !**/*.htc,     !**/*.htd, !**/*.war, !**/*.ear,
!**/*.htmls,   !**/*.ihtml,     !**/*.mht,      !**/*.mhtm,     !**/*.mhtml,   !**/*.ssi, !**/*.stm,
!**/*.stml,    !**/*.ttml,      !**/*.txn,      !**/*.xhtm,     !**/*.xhtml,   !**/*.class, !**/*.iml, !Checkmarx/Reports/*.*''',  generatePdfReport: true, fullScanCycle: 10, groupId: '1', password: '{AQAAABAAAAAQpjp3Ak/EPyRGCPaPWCf7VdfHRJ4UKGSFhLVwKQJr3xg=}', preset: '0', projectName: 'argo-uat1', sastEnabled: true, scaReportFormat: 'PDF', serverUrl: 'http://10.33.0.16:80/', sourceEncoding: '1', username: '', vulnerabilityThresholdResult: 'FAILURE', waitForResultsEnabled: true])

           }
	}
    }}
